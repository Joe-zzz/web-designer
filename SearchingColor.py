# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SearchingColor.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
class Color():
    def __init__(self):
        self.html=""
        self.name=""


class Ui_SearchingColor(object):
    def setupUi(self, SearchingColor):
        self.list=[]
        SearchingColor.setObjectName("SearchingColor")
        SearchingColor.resize(378, 88)
        self.comboBox = QtWidgets.QComboBox(SearchingColor)
        self.comboBox.setGeometry(QtCore.QRect(40, 20, 201, 21))
        self.comboBox.setObjectName("comboBox")
        self.pushButton = QtWidgets.QPushButton(SearchingColor)
        self.pushButton.setGeometry(QtCore.QRect(260, 20, 93, 31))
        self.pushButton.setObjectName("pushButton")

        self.click=False
        self.retranslateUi(SearchingColor)
        QtCore.QMetaObject.connectSlotsByName(SearchingColor)


    def retranslateUi(self, SearchingColor):
        _translate = QtCore.QCoreApplication.translate
        SearchingColor.setWindowTitle(_translate("SearchingColor", "Searching Color"))
        self.pushButton.setText(_translate("SearchingColor", "Apply"))
        self.text=open("Color.txt","r")
        color=self.text.readline().split("\n")[0]
        while(color!=''):
            New=Color()
            New.name=color
            New.html=self.text.readline().split("\n")[0]
            self.comboBox.addItem(New.name)
            color=self.text.readline().split("\n")[0]
            self.list.append(New)


    def getColor(self):
        return self.comboBox.currentText()
    def Reset(self):
        self.comboBox.setCurrentIndex(0)











